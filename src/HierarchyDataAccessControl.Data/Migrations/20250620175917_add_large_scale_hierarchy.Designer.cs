// <auto-generated />
using System;
using HierarchyDataAccessControl.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HierarchyDataAccessControl.Data.Migrations
{
    [DbContext(typeof(HierarchyDataAccessContext))]
    [Migration("20250620175917_add_large_scale_hierarchy")]
    partial class add_large_scale_hierarchy
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HierarchyDataAccessControl.Models.AccessGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups", (string)null);
                });

            modelBuilder.Entity("HierarchyDataAccessControl.Models.AccessPermission", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("PermissionId", "AccessId");

                    b.HasIndex("TypeId");

                    b.ToTable("AccessPermissions", (string)null);
                });

            modelBuilder.Entity("HierarchyDataAccessControl.Models.AccessPermissionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AccessPermissionTypes", (string)null);
                });

            modelBuilder.Entity("HierarchyDataAccessControl.Models.HierarchyNode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Description");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ParentId");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("TypeId");

                    b.ToTable("HierarchyNodes", (string)null);
                });

            modelBuilder.Entity("HierarchyDataAccessControl.Models.HierarchyNodePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HierarchyNodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HierarchyNodeId");

                    b.ToTable("HierarchyNodePermissions", (string)null);
                });

            modelBuilder.Entity("HierarchyDataAccessControl.Models.HierarchyNodeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("HierarchyNodeTypes", (string)null);
                });

            modelBuilder.Entity("HierarchyDataAccessControl.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("HierarchyDataAccessControl.Models.UserAccessGroup", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccessGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "AccessGroupId");

                    b.HasIndex("AccessGroupId");

                    b.ToTable("UserAccessGroup", (string)null);
                });

            modelBuilder.Entity("HierarchyDataAccessControl.Models.AccessPermission", b =>
                {
                    b.HasOne("HierarchyDataAccessControl.Models.HierarchyNodePermission", null)
                        .WithMany("Accesess")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HierarchyDataAccessControl.Models.AccessPermissionType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("HierarchyDataAccessControl.Models.HierarchyNode", b =>
                {
                    b.HasOne("HierarchyDataAccessControl.Models.HierarchyNode", "Parent")
                        .WithMany("ChildrenNodes")
                        .HasForeignKey("ParentId");

                    b.HasOne("HierarchyDataAccessControl.Models.HierarchyNodeType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("HierarchyDataAccessControl.Models.HierarchyNodePermission", b =>
                {
                    b.HasOne("HierarchyDataAccessControl.Models.HierarchyNode", null)
                        .WithMany("Permissions")
                        .HasForeignKey("HierarchyNodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HierarchyDataAccessControl.Models.UserAccessGroup", b =>
                {
                    b.HasOne("HierarchyDataAccessControl.Models.AccessGroup", null)
                        .WithMany()
                        .HasForeignKey("AccessGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HierarchyDataAccessControl.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HierarchyDataAccessControl.Models.HierarchyNode", b =>
                {
                    b.Navigation("ChildrenNodes");

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("HierarchyDataAccessControl.Models.HierarchyNodePermission", b =>
                {
                    b.Navigation("Accesess");
                });
#pragma warning restore 612, 618
        }
    }
}
